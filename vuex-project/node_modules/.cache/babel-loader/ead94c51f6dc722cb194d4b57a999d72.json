{"remainingRequest":"C:\\Users\\momos\\Desktop\\Vue-practice\\vuex-project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\momos\\Desktop\\Vue-practice\\vuex-project\\src\\store.js","dependencies":[{"path":"C:\\Users\\momos\\Desktop\\Vue-practice\\vuex-project\\src\\store.js","mtime":1607268314895},{"path":"C:\\Users\\momos\\Desktop\\Vue-practice\\vuex-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\momos\\Desktop\\Vue-practice\\vuex-project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  // 데이터 역할\n  state: {\n    allUsers: [{\n      userId: 'hoza123',\n      password: '123',\n      name: 'Hoza',\n      address: 'Seoul',\n      src: 'https://goo.gl/oqLfJR'\n    }, {\n      userId: 'max123',\n      password: '456',\n      name: 'Max',\n      address: 'Berlin',\n      src: 'https://goo.gl/Ksk9B9'\n    }, {\n      userId: 'lego123',\n      password: '789',\n      name: 'Lego',\n      address: 'Busan',\n      src: 'https://goo.gl/x7SpCD'\n    }]\n  },\n  // computed와 비슷한역할\n  getters: {\n    allUsersCount: function allUsersCount(state) {\n      return state.allUsers.length;\n    },\n    countOfSeoul: function countOfSeoul(state) {\n      var count = 0;\n      state.allUsers.forEach(function (user) {\n        if (user.address === 'Seoul') count++;\n      });\n      return count;\n    },\n    // 에로우 펑션 쓸때 두개이상 인자 받으려면 꼭  괄호 치기\n    percentOfSeoul: function percentOfSeoul(state, getters) {\n      return Math.round(getters.countOfSeoul / getters.allUsersCount * 100);\n    }\n  },\n  // getters: {\n  //   allUsersCount: state => {\n  //     return state.allUsers.length\n  //   }\n  // },\n  // state를 변화시키는것\n  mutations: {\n    addUsers: function addUsers(state, payload) {\n      state.allUsers.push(payload);\n    }\n  },\n  // stat를 변화시키기 위한 비지니스 로직\n  actions: {\n    addUsers: function addUsers(_ref, payload) {\n      var commit = _ref.commit;\n      commit('addUsers', payload);\n    }\n  }\n});",{"version":3,"sources":["C:/Users/momos/Desktop/Vue-practice/vuex-project/src/store.js"],"names":["Vue","Vuex","use","Store","state","allUsers","userId","password","name","address","src","getters","allUsersCount","length","countOfSeoul","count","forEach","user","percentOfSeoul","Math","round","mutations","addUsers","payload","push","actions","commit"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC5B;AACAC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAC,CACP;AAACC,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE,KAA9B;AAAqCC,MAAAA,IAAI,EAAE,MAA3C;AAAmDC,MAAAA,OAAO,EAAE,OAA5D;AAAqEC,MAAAA,GAAG,EAAC;AAAzE,KADO,EAEP;AAACJ,MAAAA,MAAM,EAAE,QAAT;AAAmBC,MAAAA,QAAQ,EAAE,KAA7B;AAAoCC,MAAAA,IAAI,EAAE,KAA1C;AAAiDC,MAAAA,OAAO,EAAE,QAA1D;AAAoEC,MAAAA,GAAG,EAAC;AAAxE,KAFO,EAGP;AAACJ,MAAAA,MAAM,EAAE,SAAT;AAAoBC,MAAAA,QAAQ,EAAE,KAA9B;AAAqCC,MAAAA,IAAI,EAAE,MAA3C;AAAmDC,MAAAA,OAAO,EAAE,OAA5D;AAAqEC,MAAAA,GAAG,EAAC;AAAzE,KAHO;AADJ,GAFqB;AAU5B;AACAC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAE,uBAASR,KAAT,EAAgB;AAC7B,aAAOA,KAAK,CAACC,QAAN,CAAeQ,MAAtB;AACD,KAHM;AAIPC,IAAAA,YAAY,EAAE,sBAAAV,KAAK,EAAI;AACrB,UAAIW,KAAK,GAAG,CAAZ;AACAX,MAAAA,KAAK,CAACC,QAAN,CAAeW,OAAf,CAAuB,UAAAC,IAAI,EAAI;AAC7B,YAAGA,IAAI,CAACR,OAAL,KAAiB,OAApB,EAA6BM,KAAK;AACnC,OAFD;AAGA,aAAOA,KAAP;AACD,KAVM;AAWP;AACAG,IAAAA,cAAc,EAAE,wBAACd,KAAD,EAAQO,OAAR,EAAoB;AAClC,aAAOQ,IAAI,CAACC,KAAL,CAAWT,OAAO,CAACG,YAAR,GAAuBH,OAAO,CAACC,aAA/B,GAA+C,GAA1D,CAAP;AACD;AAdM,GAXmB;AA2B5B;AACA;AACA;AACA;AACA;AAEA;AACAS,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,kBAAClB,KAAD,EAAQmB,OAAR,EAAoB;AAC5BnB,MAAAA,KAAK,CAACC,QAAN,CAAemB,IAAf,CAAoBD,OAApB;AACD;AAHQ,GAlCiB;AAuC5B;AACAE,EAAAA,OAAO,EAAE;AACPH,IAAAA,QAAQ,EAAE,wBAAWC,OAAX,EAAuB;AAAA,UAArBG,MAAqB,QAArBA,MAAqB;AAC/BA,MAAAA,MAAM,CAAC,UAAD,EAAaH,OAAb,CAAN;AACD;AAHM;AAxCmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  // 데이터 역할\n  state: {\n    allUsers:[\n      {userId: 'hoza123', password: '123', name: 'Hoza', address: 'Seoul', src:'https://goo.gl/oqLfJR'},\n      {userId: 'max123', password: '456', name: 'Max', address: 'Berlin', src:'https://goo.gl/Ksk9B9'},\n      {userId: 'lego123', password: '789', name: 'Lego', address: 'Busan', src:'https://goo.gl/x7SpCD'}\n    ]\n  },\n\n  // computed와 비슷한역할\n  getters: {\n    allUsersCount: function(state) {\n      return state.allUsers.length\n    },\n    countOfSeoul: state => {\n      let count = 0\n      state.allUsers.forEach(user => {\n        if(user.address === 'Seoul') count++\n      })\n      return count\n    },\n    // 에로우 펑션 쓸때 두개이상 인자 받으려면 꼭  괄호 치기\n    percentOfSeoul: (state, getters) => {\n      return Math.round(getters.countOfSeoul / getters.allUsersCount * 100)  \n    }\n  },\n  // getters: {\n  //   allUsersCount: state => {\n  //     return state.allUsers.length\n  //   }\n  // },\n\n  // state를 변화시키는것\n  mutations: {\n    addUsers: (state, payload) => {\n      state.allUsers.push(payload)\n    }\n  },\n  // stat를 변화시키기 위한 비지니스 로직\n  actions: {\n    addUsers: ({commit}, payload) => {\n      commit('addUsers', payload)\n    }\n  }\n})\n"]}]}